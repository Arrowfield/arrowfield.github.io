{
    "version": "https://jsonfeed.org/version/1",
    "title": "zip",
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/04/02/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/",
            "url": "http://example.com/2022/04/02/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/",
            "title": "个人博客的开发流程",
            "date_published": "2022-04-02T07:23:00.000Z",
            "content_html": "<p>网上有许多开源博客框架，可以让我们快速的搭建自己的个人网站。常见的博客框架有：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>，<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNDIxMTcwOQ==\">Typecho</span>，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi53b3JkcHJlc3Mub3JnLw==\">Wordpress</span>，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWxvLnJ1bi8=\">Halo</span>，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iM2xvZy5vcmcvc29sby8=\">Solo</span>，<span class=\"exturl\" data-url=\"aHR0cHM6Ly92dWVwcmVzcy52dWVqcy5vcmcvemgv\">Vuepress</span>。这些都可以大大简化我们搭建个人网站的流程，并且可以自定义我们喜欢的主题。个人网站的好处就是可以让我们可以更加自由的写自己的文章，如果有兴趣开发自己的博客框架，就可以参考以下的建站流程</p>\n<h1 id=\"开发个人博客\"><a class=\"anchor\" href=\"#开发个人博客\">#</a> 开发个人博客</h1>\n<p>开发前提：<br />\n系统需要安装<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL3poLWNuLw==\"> Node</span> 环境，直接下载长期维护版，因为这个版本可能比较稳定。有时候版本过高会导致奇奇怪怪的问题，安装的时候直接下一步就好。个人比较推荐 v14.8.0，因为我们在开发的过程中，可以需要用到 node-sass 的依赖包，执行 yarn install 的时候就会报错，两种方式解决，一是将 node-sass 改成 sass【官方推荐】，二是将 node 的版本降低，经过测试 v16 是会报错的。开发工具的话可以选则<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v\"> vscode</span> 或者<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS93ZWJzdG9ybS8=\"> webstorm</span>，webstrom 可以使用教育邮箱申请，或者去 TB 购买账号<br />\n后台的技术栈使用的是 Java，因此我们还需要安装 jdk，通常使用的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL0Fkb3B0T3BlbkpESy84L2pkay94NjQv\"> jdk1.8 国内镜像下载地址</span>版本。开发工具下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9pZGVhLw==\"> IntelliJ IDEA</span>，可以选择社区版，这个版本是免费的。下载 <code>Spring Assistant</code>  插件，构建 springboot 项目，安装 pom 相关依赖，运行项目<img data-src=\"https://cdn.zipblog.top/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_16483523743010.png?imageView2/0/q/75\" alt=\"企业微信截图_16483523743010.png\" /> 如果碰到依赖包下载特别慢的情况，可以重新配置<a href=\"%5Bhttps://cdn.rawchen.com/files/apache-maven-3.6.1.zip%5D(https://cdn.rawchen.com/files/apache-maven-3.6.1.zip)\"> maven</a> 的下载镜像，配置 maven 的 <code>settings.xml</code>  文件即可</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 检查 node 版本</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">node</span> -v</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 全局安装 cnpm</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g cnpm --registry<span class=\"token operator\">=</span>https://registry.npm.taobao.org</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 全局安装 yarn</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g <span class=\"token function\">yarn</span> --registry<span class=\"token operator\">=</span>https://registry.npm.taobao.org</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># yarn 路径并添加到 $PATH 在 Linux 中</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>/usr/local/lib/node_modules/yarn/bin/:<span class=\"token environment constant\">$PATH</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$PATH</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 安装 vue-cli</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">yarn</span> global <span class=\"token function\">add</span> @vue/cli</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 创建 vue 项目</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>vue create hello-world</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 运行项目</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">yarn</span> serve</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 检查 jdk 版本</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>java -version</pre></td></tr></table></figure><p>前端主要技术栈：vue + vue-cli + vue-router + vuex + axios</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi52dWVqcy5vcmc=\">vue</span>：渐进式的 JavaScript 的框架</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudnVlanMub3JnL3poLw==\">vue-cli</span>：Vue.js 开发的标准工具</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb3V0ZXIudnVlanMub3JnL3poLw==\">vue-router</span>：Vue.js 官方的路由管理器</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92dWV4LnZ1ZWpzLm9yZy96aC8=\">vuex</span>：Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5heGlvcy1qcy5jb20v\">axios</span>：易用、简洁且高效的 http 库</li>\n</ul>\n<p>前端主要还是使用上诉的依赖包，还包含一些辅助依赖包，如 @fancyapps/ui，可以有很好的文章图片切换的友好交互；@moefe/vue-aplayer 一款音乐播放器的插件，可以显示歌词以及音乐的播放；js-cookie 可以简化 cookie 的操作流程；live2d-widget 卡通人物插件，美化博客相关页面等等；具体可以参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vbWNhbi96aXBCbG9nLmdpdA==\">开源代码</span>中的 package.json 文件。</p>\n<p>后端主要技术栈：springboot + mybatis + mysql</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWJvb3Q=\">Spring Boot</span>：解决企业应用开发的复杂性后端开发框架</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9teWJhdGlzLm9yZy9teWJhdGlzLTMvemgvaW5kZXguaHRtbA==\">MyBatis</span>：MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubXlzcWwuY29tLw==\">MySQL</span>：关系型数据库管理系统</li>\n</ul>\n<p>如果使用 springboot 做 web 开发服务端，只需要引入 web 这个 starter 依赖即可，springboot 使用的是内置的 tomcat 作为 web 服务器</p>\n<h1 id=\"前后端代码托管\"><a class=\"anchor\" href=\"#前后端代码托管\">#</a> 前后端代码托管</h1>\n<p>前后端的代码均托管在码云上，使用 docker 进行项目的自动化部署<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vbWNhbi96aXBCbG9nLmdpdA==\">前台</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vbWNhbi96aXBCbG9nU2VydmVyLmdpdA==\">后台</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vbWNhbi96aXBCbG9nQWRtaW4=\">管理端</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTAzODM3Nzc0Mzk3NDQ3\">docker 部署 vue 项目</span>，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnpldHMuY24vIy9hcnRpY2xlLzk=\">压力测试工具</span></p>\n<h1 id=\"部署线上\"><a class=\"anchor\" href=\"#部署线上\">#</a> 部署线上</h1>\n<p>我们可以在阿里云购买 Linux 系统的 ECS 云服务器，进行项目构建的流程。安装好环境后，我们将执行以下的命令构建项目，管理端可以直接使用对应的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5qaWFjaGVuLmdpdGh1Yi5pby92dWUtZWxlbWVudC1hZG1pbi1zaXRlL3poLw==\"> UI 页面</span></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g @vue/cli</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># OR</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> global <span class=\"token function\">add</span> @vue/cli</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 前端 vue 项目的构建</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>vue create my-project</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># OR</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>vue ui</pre></td></tr></table></figure><p>如果我们使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2Fzcy5oay8=\"> sass 这个 css 扩展语言</span>，需要执行以下的代码，但是这块有个坑，它要求系统要安装 python2.7，否则在安装依赖的时候，会报错。并且如果项目使用了预渲染，打包生产环境的时候也会报错。windows 常用的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODg2NDE3L2FydGljbGUvZGV0YWlscy8xMDMxMjM2NTk=\">解决方式</span>，Vue 的预渲染可能导致 Linux 环境打包生产模式失败。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i node-sass sass-loader style-loader -D</pre></td></tr></table></figure><h2 id=\"linux安装jdk\"><a class=\"anchor\" href=\"#linux安装jdk\">#</a> Linux 安装 jdk</h2>\n<p>执行以下的脚本</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 运行环境</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum <span class=\"token function\">install</span> java-1.8.0-openjdk java-1.8.0-openjdk-devel.x86_64</pre></td></tr></table></figure><h2 id=\"安装docker\"><a class=\"anchor\" href=\"#安装docker\">#</a> 安装 Docker</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 最新的系统不需要 update</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum update </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token function\">docker</span></pre></td></tr></table></figure><p>查看端口占用情况</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>终止8080端口</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">netstat</span> -tunlp<span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token number\">8080</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">kill</span> -9 pid</pre></td></tr></table></figure><p>后台运行 springboot 程序</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 后台运行 jar 包 自定义端口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">nohup</span> java -jar zip-blog-serve-0.0.1-SNAPSHOT.jar --server.port<span class=\"token operator\">=</span><span class=\"token number\">8080</span> <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure><p>检查防火墙的运行状态</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl status firewalld</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">service</span> firewalld stop</pre></td></tr></table></figure><p>安装依赖的工具</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 云服务器需要装的 node,git,nginx 环境</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum <span class=\"token function\">install</span> -y nodejs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>yum <span class=\"token function\">install</span> -y <span class=\"token function\">git</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> pull nginx</pre></td></tr></table></figure><p>Linux 下载码云上的代码</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#切到跟目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> / </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#创建文件夹</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">mkdir</span> zipBlog </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">cd</span> zipBlog</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">git</span> clone https://gitee.com/mcan/zipBlog.git</pre></td></tr></table></figure><p>新建好对应的映射文件后，即可运行 docker 中的 <code>映射80端口</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>--name<span class=\"token operator\">=</span>nginx01 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-p <span class=\"token number\">80</span>:80 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-v /nginx/logs:/var/log/nginx <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-v /nginx/html:/usr/share/nginx/html <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-v /nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-d --rm nginx</pre></td></tr></table></figure><p>映射 443 端口</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>hljs</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>--name<span class=\"token operator\">=</span>nginx02 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-p <span class=\"token number\">80</span>:80 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-p <span class=\"token number\">443</span>:443 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-v /nginx/logs:/var/log/nginx <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-v /nginx/html:/usr/share/nginx/html <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-v /nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-v /nginx/conf.d/cert/:/etc/nginx/cert <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-d --rm nginx</pre></td></tr></table></figure><p>快速删除 node 包</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>hljs</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cnpm <span class=\"token function\">install</span> rimraf -g </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 使用命令删除 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rimraf node_modules</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># jarb 上传工具</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>yum -y <span class=\"token function\">install</span> lrzsz</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rz -y</pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxNTMwMjY4MA==\">node 的版本太低的解决方式</span></p>\n<p>强制复制的命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>hljs</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">\\</span>cp -rf dist/* /nginx/html/web/ </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 8000 端口运行 vue</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> serve --port <span class=\"token number\">8000</span></pre></td></tr></table></figure><p>家里的网络和 ecs 阿里云服务器使用 npm 安装 前提安装 windows 运行工具包</p>\n<p>公司的网络使用 yarn</p>\n<p>node-sass 安装失败：降低 node 的版本到 v14.8.0 安装<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ucG0udGFvYmFvLm9yZy9taXJyb3JzL3B5dGhvbi8yLjcv\"> python2.7</span> 和初始化 windows 工具依赖环境</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9hNDhlMDYxYWU4ZmQ=\">神坑</span></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> libXcomposite.x86_64 libXcursor.x86_64 libXdamage.x86_64 libXext.x86_64 libXi.x86_64 libXtst.x86_64 cups-libs.x86_64 libXScrnSaver.x86_64 libXrandr.x86_64 GConf2.x86_64 alsa-lib.x86_64 atk.x86_64 gtk3.x86_64 ipa-gothic-fonts xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-utils xorg-x11-fonts-cyrillic xorg-x11-fonts-Type1 xorg-x11-fonts-misc</pre></td></tr></table></figure><h1 id=\"接入云评论\"><a class=\"anchor\" href=\"#接入云评论\">#</a> 接入云评论</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>hljs</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save vuepress-plugin-comment</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> valine --save</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># npm 配置代理服务器</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> config --global https.proxy <span class=\"token number\">127.0</span>.0.1:12639</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> config --global http.proxy <span class=\"token number\">127.0</span>.0.1:12639</pre></td></tr></table></figure><h1 id=\"代码规范\"><a class=\"anchor\" href=\"#代码规范\">#</a> 代码规范</h1>\n<ul>\n<li>同级目录下使用相对路径，非同级使用 @</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvY29kaW5nLXN0YW5kYXJkLmh0bWwjJUU0JUJCJUEzJUU3JUEwJTgxJUU4JUE3JTg0JUU4JThDJTgz\">参考</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92My5jbi52dWVqcy5vcmcvc3R5bGUtZ3VpZGUv\">Vue 风格指南</span></li>\n</ul>\n<p>备注：服务器宕机后的重启步骤</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl start <span class=\"token function\">docker</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run -d -p <span class=\"token number\">80</span>:80 -p <span class=\"token number\">443</span>:443 --name nginx <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-v /nginx/conf/conf.d:/etc/nginx/conf.d <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-v /nginx/html:/usr/share/nginx/html <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-v /nginx/logs:/var/log/nginx <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-v /nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-v /nginx/ssl:/ssl/ <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-v /nginx/cache:/nginx/cache <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-d --rm nginx</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run --detach --name solo --network<span class=\"token operator\">=</span>host <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    --env <span class=\"token assign-left variable\">RUNTIME_DB</span><span class=\"token operator\">=</span><span class=\"token string\">\"MYSQL\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    --env <span class=\"token assign-left variable\">JDBC_USERNAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    --env <span class=\"token assign-left variable\">JDBC_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token string\">\"919496\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    --env <span class=\"token assign-left variable\">JDBC_DRIVER</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.mysql.cj.jdbc.Driver\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    --env <span class=\"token assign-left variable\">JDBC_URL</span><span class=\"token operator\">=</span><span class=\"token string\">\"jdbc:mysql://127.0.0.1:3307/solo?useUnicode=yes&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    -v /skins/:/opt/solo/skins/\t<span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    --rm <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    b3log/solo --lute_http<span class=\"token operator\">=</span>http://127.0.0.1:8249  --listen_port<span class=\"token operator\">=</span><span class=\"token number\">8080</span> --static_server_scheme<span class=\"token operator\">=</span>https --static_server_host<span class=\"token operator\">=</span>cdn.jsdelivr.net --static_server_port<span class=\"token operator\">=</span>  --static_path<span class=\"token operator\">=</span>/gh/Arrowfield/solo@4.3.2/src/main/resources    --server_scheme<span class=\"token operator\">=</span>https --server_host<span class=\"token operator\">=</span>zipblog.top --server_port<span class=\"token operator\">=</span></pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}